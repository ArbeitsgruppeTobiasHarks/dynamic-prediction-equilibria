@article{Graf2020,
  doi = {10.1007/s10107-020-01504-2},
  year = {2020},
  month = may,
  publisher = {Springer Science and Business Media {LLC}},
  volume = {183},
  number = {1-2},
  pages = {309--335},
  author = {Lukas Graf and Tobias Harks and Leon Sering},
  title = {Dynamic flows with adaptive route choice},
  journal = {Mathematical Programming}
}

@misc{mainpaper,
      title={Machine-Learned Prediction Equilibrium for Dynamic Traffic Assignment}, 
      author={Lukas Graf and Tobias Harks and Kostas Kollias and Michael Markl},
      year={2021},
      eprint={2109.06713},
      archivePrefix={arXiv},
      primaryClass={cs.GT}
}

@article{Cominetti2015,
 delISSN = {0030364X, 15265463},
 URL = {http://www.jstor.org/stable/24540348},
 author = {Roberto Cominetti and José Correa and Omar Larré},
 journal = {Operations Research},
 number = {1},
 pages = {21--34},
 publisher = {INFORMS},
 title = {Dynamic Equilibria in Fluid Queueing Networks},
 volume = {63},
 year = {2015}
}

@inbook{frank2005weka,
  added-at = {2009-11-11T16:04:07.000+0100},
  address = {Berlin},
  author = {Frank, E. and Hall, M. A. and Holmes, G. and Kirkby, R. and Pfahringer, B. and Witten, I. H.},
  biburl = {https://www.bibsonomy.org/bibtex/213435afd510be944e56862b0523643b9/unhammer},
  booktitle = {Data Mining and Knowledge Discovery Handbook: A Complete Guide for Practitioners and Researchers},
  editor = {Maimon, O. and Rokach, L.},
  interhash = {efd9b5dadfd832fc98d173bf4a1bc6a3},
  intrahash = {13435afd510be944e56862b0523643b9},
  keywords = {DASP303 ML Master WEKA},
  pages = {1305--1314},
  publisher = {Springer},
  timestamp = {2009-11-11T16:04:07.000+0100},
  title = {{Weka: A machine learning workbench for data mining.}},
  url = {http://researchcommons.waikato.ac.nz/handle/10289/1497},
  year = 2005
}

@misc{tensorflow,
title={ {TensorFlow}: Large-Scale Machine Learning on Heterogeneous Systems},
url={https://www.tensorflow.org/},
DELnote={Software available from tensorflow.org},
author={
    Martín~Abadi and
    Ashish~Agarwal and
    Paul~Barham and
    Eugene~Brevdo and
    Zhifeng~Chen and
    Craig~Citro and
    Greg~S.~Corrado and
    Andy~Davis and
    Jeffrey~Dean and
    Matthieu~Devin and
    Sanjay~Ghemawat and
    Ian~Goodfellow and
    Andrew~Harp and
    Geoffrey~Irving and
    Michael~Isard and
    Yangqing Jia and
    Rafal~Jozefowicz and
    Lukasz~Kaiser and
    Manjunath~Kudlur and
    Josh~Levenberg and
    Dandelion~Mané and
    Rajat~Monga and
    Sherry~Moore and
    Derek~Murray and
    Chris~Olah and
    Mike~Schuster and
    Jonathon~Shlens and
    Benoit~Steiner and
    Ilya~Sutskever and
    Kunal~Talwar and
    Paul~Tucker and
    Vincent~Vanhoucke and
    Vijay~Vasudevan and
    Fernanda~Viégas and
    Oriol~Vinyals and
    Pete~Warden and
    Martin~Wattenberg and
    Martin~Wicke and
    Yuan~Yu and
    Xiaoqiang~Zheng},
  year={2015},
}

@article{scikit-learn,
  author = {Pedregosa, Fabian and Varoquaux, Ga\"{e}l and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and Vanderplas, Jake and Passos, Alexandre and Cournapeau, David and Brucher, Matthieu and Perrot, Matthieu and Duchesnay, \'{E}douard},
  title = {Scikit-Learn: Machine Learning in Python},
  year = {2011},
  issue_date = {2/1/2011},
  publisher = {JMLR.org},
  volume = {12},
  number = {null},
  issn = {1532-4435},
  abstract = {Scikit-learn is a Python module integrating a wide range of state-of-the-art machine
  learning algorithms for medium-scale supervised and unsupervised problems. This package
  focuses on bringing machine learning to non-specialists using a general-purpose high-level
  language. Emphasis is put on ease of use, performance, documentation, and API consistency.
  It has minimal dependencies and is distributed under the simplified BSD license, encouraging
  its use in both academic and commercial settings. Source code, binaries, and documentation
  can be downloaded from http://scikit-learn.sourceforge.net.},
  journal = {J. Mach. Learn. Res.},
  month = nov,
  pages = {2825–2830},
  numpages = {6}
}

  



@article{dgl,
  author    = {Minjie Wang and
               Lingfan Yu and
               Da Zheng and
               Quan Gan and
               Yu Gai and
               Zihao Ye and
               Mufei Li and
               Jinjing Zhou and
               Qi Huang and
               Chao Ma and
               Ziyue Huang and
               Qipeng Guo and
               Hao Zhang and
               Haibin Lin and
               Junbo Zhao and
               Jinyang Li and
               Alexander J. Smola and
               Zheng Zhang},
  title     = {Deep Graph Library: Towards Efficient and Scalable Deep Learning on
               Graphs},
  journal   = {CoRR},
  volume    = {abs/1909.01315},
  year      = {2019},
  DELurl       = {http://arxiv.org/abs/1909.01315},
  eprinttype = {arXiv},
  eprint    = {1909.01315},
  timestamp = {Tue, 30 Mar 2021 15:38:46 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1909-01315.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@incollection{pytorch,
title = {PyTorch: An Imperative Style, High-Performance Deep Learning Library},
author = {Paszke, Adam and Gross, Sam and Massa, Francisco and Lerer, Adam and Bradbury, James and Chanan, Gregory and Killeen, Trevor and Lin, Zeming and Gimelshein, Natalia and Antiga, Luca and Desmaison, Alban and Kopf, Andreas and Yang, Edward and DeVito, Zachary and Raison, Martin and Tejani, Alykhan and Chilamkurthy, Sasank and Steiner, Benoit and Fang, Lu and Bai, Junjie and Chintala, Soumith},
booktitle = {Advances in Neural Information Processing Systems 32},
editor = {H. Wallach and H. Larochelle and A. Beygelzimer and F. d\textquotesingle Alch\'{e}-Buc and E. Fox and R. Garnett},
pages = {8024--8035},
year = {2019},
publisher = {Curran Associates, Inc.},
url = {http://papers.neurips.cc/paper/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.pdf}
}


@misc{openstreetmaps,
  author = {{OpenStreetMap contributors}},
  title = {{Planet dump retrieved from https://planet.osm.org }},
  howpublished = "\url{ https://www.openstreetmap.org }",
  year = {2017},
}
 
 @article{LeBlanc1975,
title = {An efficient approach to solving the road network equilibrium traffic assignment problem},
journal = {Transportation Research},
volume = {9},
number = {5},
pages = {309-318},
year = {1975},
issn = {0041-1647},
doi = {10.1016/0041-1647(75)90030-1},
DELurl = {https://www.sciencedirect.com/science/article/pii/0041164775900301},
author = {Larry J. LeBlanc and Edward K. Morlok and William P. Pierskalla},
abstract = {This paper presents a solution technique for large scale road network equilibrium assignment and related flow problems with nonlinear costs. It is shown that this nonlinear network problem can be solved without explicitly considering any of the constraints—they are satisfied automatically in the procedure developed—and without storing all of the individual decision variables. The computational requirements of the algorithm reported are almost identical to the requirements of heuristic solution techniques for traffic assignment. A solution time of nine seconds on the CDC 6400 was obtained for the test problem, which included 76 arcs and 24 nodes, all of which were origins and destinations.}
}

@inproceedings{TimeDepShortestPaths,
author = {Ding, Bolin and Yu, Jeffrey Xu and Qin, Lu},
title = {Finding Time-Dependent Shortest Paths over Large Graphs},
year = {2008},
DELisbn = {9781595939265},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
DELurl = {https://doi.org/10.1145/1353343.1353371},
doi = {10.1145/1353343.1353371},
abstract = {The spatial and temporal databases have been studied widely and intensively over years.
In this paper, we study how to answer queries of finding the best departure time that
minimizes the total travel time from a place to another, over a road network, where
the traffic conditions dynamically change from time to time. We study a generalized
form of this problem, called the time-dependent shortest-path problem. A time-dependent
graph GT is a graph that has an edge-delay function, wi, j(t), associated with each
edge (vi, vj), to be stored in a database. The edge-delay function wi, j(t) specifies
how much time it takes to travel from node vi to node vj, if it departs from vi at
time t. A user-specified query is to ask the minimum-travel-time path, from a source
node, vs, to a destination node, ve, over the time-dependent graph, GT, with the best
departure time to be selected from a time interval T. We denote this user query as
LTT(vs, ve, T) over GT. The challenge of this problem is the added complexity due
to the time dependency in the time-dependent graph. That is, edge delays are not constants,
and can vary from time to time. In this paper, we propose a novel algorithm to find
the minimum-travel-time path with the best departure time for a LTT(vs, ve, T) query
over a large graph GT. Our approach outperforms existing algorithms in terms of both
time complexity in theory and efficiency in practice. We will discuss the design of
our algorithm, together with its correctness and complexity. We conducted extensive
experimental studies over large graphs and will report our findings.},
booktitle = {Proceedings of the 11th International Conference on Extending Database Technology: Advances in Database Technology},
pages = {205–216},
numpages = {12},
location = {Nantes, France},
series = {EDBT '08}
}

  

